# myData[, c(12:14)]<- as.factor(myData[,c(12:14)])   ## Coding Hour, month day as factor
myData <-  myData[,-c(2:4,8, 16,22:26)]
##Generating Training Dataset
myTrain <- myData[myData$Year != "2015",]
##Generating Test Set
myTest <- myData[myData$Year == "2015",]
mod_gbo <-h2o.gbm(x=c('X','Y' , 'PdDistrict', 'Year',
'DayOfWeek','UspsAbb',
'Month','Day','Hour','Minute' ),
y='Broad',training_frame = myTrain, seed=889 ,ntrees =  50, max_depth = 15,
min_rows = 100, nbins=45,nbins_cats = 500, learn_rate = 0.1,
distribution='multinomial')
mod_gbo <-h2o.gbm(x=c('X','Y' , 'PdDistrict', 'Year',
'DayOfWeek','UspsAbb',
'Month','Day','Hour','Minute' ),
y='Broad',training_frame = as.h2o(myTrain), seed=889 ,ntrees =  50, max_depth = 15,
min_rows = 100, nbins=45,nbins_cats = 500, learn_rate = 0.1,
distribution='multinomial')
h2o.shutdown()
2o.init(ip = "localhost", port = 54321, startH2O = TRUE)
myData <- h2o.importFile("C:\\Users\\Saana\\Desktop\\MastersProject\\Crime\\TrainWeather3.csv",header = TRUE) ## Train WEATHER2 HAS weather and dummy variable stuff
myData[, c(11:13,30)]<- as.factor(myData[,c(11:13,30)])
# myData[, c(18)]<- as.factor(myData[,c(18)])
# myData[, c(30:38)]<- as.factor(myData[,c(30:38)])   ## All dummy variables to factor
# myData[, c(12:14)]<- as.factor(myData[,c(12:14)])   ## Coding Hour, month day as factor
myData <-  myData[,-c(2:4,8, 16,22:26)]
##Generating Training Dataset
myTrain <- myData[myData$Year != "2015",]
##Generating Test Set
myTest <- myData[myData$Year == "2015",]
### 'X','Y' , 'PdDistrict', ,'DayOfWeek','AddressDummy','UspsAbb', 'PartsOfDay','Month','Day','Hour','Minute','TimeH','TimeM','MonthAbb','UspsAbb', 'Season','Max_TemperatureF',"Mean_TemperatureF" ,"Min_TemperatureF" , "Mean_Humidity"
###, "PrecipitationIn","Events"    , "AddressDummy" , "Weapons", "ResProperty" , "NonResProperty", "Traffic" , "Drug","Arrest","Juvenile", "None"      ),
ntree <- c(50)
max_depth <- c(15)
min_rows <- c(100)
nbins <-c(45)
nbins_cats <- c(1024)
learn_rate <- c(0.11)
Accuracy <- numeric(length(ntree))
Misclassification <- numeric(length(ntree))
for (i in 1:length(ntree)){
mod_gbo <-h2o.gbm(x=c('X','Y' , 'PdDistrict', 'Year',
'DayOfWeek','UspsAbb',
'Month','Day','Hour','Minute' ),
y='Broad',training_frame = myTrain, seed=889 ,ntrees =  ntree[i], max_depth = max_depth[i],
min_rows = min_rows[i], nbins=nbins[i],nbins_cats = nbins_cats[i], learn_rate = learn_rate[i],
distribution='multinomial')
PredGbm <-h2o.predict(object=mod_gbo, newdata = myTest)
TestCat <- myTest$Broad
Misclassification[i] <-mean(TestCat != PredGbm$predict)  ## Misclassification Rate =31.8
Accuracy[i] <- mean(TestCat == PredGbm$predict)  ## Accuracy = 68.2
}
myData <- h2o.importFile("C:\\Users\\Sapana\\Desktop\\MastersProject\\Crime\\TrainWeather3.csv",header = TRUE) ## Train WEATHER2 HAS weather and dummy variable stuff
myData[, c(11:13,30)]<- as.factor(myData[,c(11:13,30)])
# myData[, c(18)]<- as.factor(myData[,c(18)])
# myData[, c(30:38)]<- as.factor(myData[,c(30:38)])   ## All dummy variables to factor
# myData[, c(12:14)]<- as.factor(myData[,c(12:14)])   ## Coding Hour, month day as factor
myData <-  myData[,-c(2:4,8, 16,22:26)]
##Generating Training Dataset
myTrain <- myData[myData$Year != "2015",]
##Generating Test Set
myTest <- myData[myData$Year == "2015",]
### 'X','Y' , 'PdDistrict', ,'DayOfWeek','AddressDummy','UspsAbb', 'PartsOfDay','Month','Day','Hour','Minute','TimeH','TimeM','MonthAbb','UspsAbb', 'Season','Max_TemperatureF',"Mean_TemperatureF" ,"Min_TemperatureF" , "Mean_Humidity"
###, "PrecipitationIn","Events"    , "AddressDummy" , "Weapons", "ResProperty" , "NonResProperty", "Traffic" , "Drug","Arrest","Juvenile", "None"      ),
ntree <- c(50)
max_depth <- c(15)
min_rows <- c(100)
nbins <-c(45)
nbins_cats <- c(1024)
learn_rate <- c(0.11)
Accuracy <- numeric(length(ntree))
Misclassification <- numeric(length(ntree))
for (i in 1:length(ntree)){
mod_gbo <-h2o.gbm(x=c('X','Y' , 'PdDistrict', 'Year',
'DayOfWeek','UspsAbb',
'Month','Day','Hour','Minute' ),
y='Broad',training_frame = myTrain, seed=889 ,ntrees =  ntree[i], max_depth = max_depth[i],
min_rows = min_rows[i], nbins=nbins[i],nbins_cats = nbins_cats[i], learn_rate = learn_rate[i],
distribution='multinomial')
PredGbm <-h2o.predict(object=mod_gbo, newdata = myTest)
TestCat <- myTest$Broad
Misclassification[i] <-mean(TestCat != PredGbm$predict)  ## Misclassification Rate =31.8
Accuracy[i] <- mean(TestCat == PredGbm$predict)  ## Accuracy = 68.2
}
h2o.init(ip = "localhost", port = 54321, startH2O = TRUE)
myData <- h2o.importFile("C:\\Users\\Sapana\\Desktop\\MastersProject\\Crime\\TrainWeather3.csv",header = TRUE) ## Train WEATHER2 HAS weather and dummy variable stuff
myData[, c(11:13,30)]<- as.factor(myData[,c(11:13,30)])
# myData[, c(18)]<- as.factor(myData[,c(18)])
# myData[, c(30:38)]<- as.factor(myData[,c(30:38)])   ## All dummy variables to factor
# myData[, c(12:14)]<- as.factor(myData[,c(12:14)])   ## Coding Hour, month day as factor
myData <-  myData[,-c(2:4,8, 16,22:26)]
##Generating Training Dataset
myTrain <- myData[myData$Year != "2015",]
##Generating Test Set
myTest <- myData[myData$Year == "2015",]
### 'X','Y' , 'PdDistrict', ,'DayOfWeek','AddressDummy','UspsAbb', 'PartsOfDay','Month','Day','Hour','Minute','TimeH','TimeM','MonthAbb','UspsAbb', 'Season','Max_TemperatureF',"Mean_TemperatureF" ,"Min_TemperatureF" , "Mean_Humidity"
###, "PrecipitationIn","Events"    , "AddressDummy" , "Weapons", "ResProperty" , "NonResProperty", "Traffic" , "Drug","Arrest","Juvenile", "None"      ),
ntree <- c(50)
max_depth <- c(15)
min_rows <- c(100)
nbins <-c(45)
nbins_cats <- c(1024)
learn_rate <- c(0.11)
Accuracy <- numeric(length(ntree))
Misclassification <- numeric(length(ntree))
for (i in 1:length(ntree)){
mod_gbo <-h2o.gbm(x=c('X','Y' , 'PdDistrict', 'Year',
'DayOfWeek','UspsAbb',
'Month','Day','Hour','Minute' ),
y='Broad',training_frame = myTrain, seed=889 ,ntrees =  ntree[i], max_depth = max_depth[i],
min_rows = min_rows[i], nbins=nbins[i],nbins_cats = nbins_cats[i], learn_rate = learn_rate[i],
distribution='multinomial')
PredGbm <-h2o.predict(object=mod_gbo, newdata = myTest)
TestCat <- myTest$Broad
Misclassification[i] <-mean(TestCat != PredGbm$predict)  ## Misclassification Rate =31.8
Accuracy[i] <- mean(TestCat == PredGbm$predict)  ## Accuracy = 68.2
}
Misclassification
x <- read.csv('TrainWeather3.csv')
x$Drug <- NA    ## Cocaine etc
Drugs<- c('substance','cocaine','marijuana','narcotics','needle', 'amphetamine','heroin','methadane','narcotics','opium','hallucinogenic','opiates','baribituates')
Dr_Index <- grep(paste(Drugs,collapse="|"),as.character(x$Descript),ignore.case=TRUE,value = FALSE)
head(Dr_Index)
Dr_Index <- grep(paste(Drugs,collapse="|"),as.character(x$Descript),ignore.case=TRUE,value = TRUE)
head(Dr_Index)
x$Drug <- NA
?grepl
grep("[a-z]", letters)
paste(Drugs,collapse="|")
paste(Drugs[1],collapse="|")
?grep
irisSubset <- iris[grep("osa", iris$Species), ]
head(irisSubset)
irisSubset
[grep("osa", iris$Species
irisSubse
grep("osa", iris$Species)
Dr_Index <- grep(paste(Drugs[i],collapse="|"),as.character(x$Descript),ignore.case=TRUE,value = FALSE)
head(Dr_Index,9)
unique(Dr_Index)
x$Descript  %in% Drugs
grep(paste(Drugs[i],collapse="|"),as.character(x$Descript),ignore.case=TRUE,value = TRUE)
Dr_Index <- grep(paste(Drugs[i],collapse="|"),as.character(x$Descript),ignore.case=TRUE,value = TRUE)
Drugs %in% Dr_Index
x$Drug <- NA
Dr_Index <- grep(paste(Drugs[i],collapse="|"),as.character(x$Descript),ignore.case=TRUE,value = TRUE,fixed=TRUE)
head(Dr_Index)
Dr_Index <- grep(paste(Drugs[i],collapse="|"),as.character(x$Descript),ignore.case=TRUE,value = TRUE, replacement = Drugs[1])
Drugs[1]
grep('substance',x$Descript)
grep('SUBSTANCE',x$Descript)
grep('substance',x$Descript, ignore.case = T)
grep(Drugs[1],x$Descript, ignore.case = T)
((105.90 - 97.30)/ (2 *101.50 * 0.1))
str(x)
Dr_Index <- grep(Drugs[1],as.character(x$Descript), ignore.case = T)
length(Dr_Index)
for (i in length(Drugs)){
Dr_Index <- grep(Drugs[i],as.character(x$Descript), ignore.case = T)
x$Drug[Dr_Index] <- Drugs[i]
}
View(x)
for (i in 1:length(Drugs)){
Dr_Index <- grep(Drugs[i],as.character(x$Descript), ignore.case = T)
x$Drug[Dr_Index] <- Drugs[i]
}
View(x)
unique(x$Drug)
x < -read.csv('TrainWeather3.csv')
Drugs<- c('substance','cocaine','marijuana','narcotics','needle', 'amphetamine','heroin','methadane',
'narcotics','opium','hallucinogenic','opiates','baribituates')
for (i in 1:length(Drugs)){
Dr_Index <- grep(Drugs[i],as.character(x$Descript), ignore.case = T)
x$Drug[Dr_Index] <- Drugs[i]
}
ATM <- c('atm')
for (i in 1:length(ATM)){
atm_Index <- grep(ATM[i],as.character(x$Descript), ignore.case = T)
x$Drug[atn_Index] <- ATM[i]
}
ATM <- c('atm')
for (i in 1:length(ATM)){
atm_Index <- grep(ATM[i],as.character(x$Descript), ignore.case = T)
x$Drug[atm_Index] <- ATM[i]
}
View(x)
Drugs<- c('substance','cocaine','marijuana','narcotics','needle', 'amphetamine','heroin','methadane',
'narcotics','opium','hallucinogenic','opiates','baribituates')
for (i in 1:length(Drugs)){
Dr_Index <- grep(Drugs[i],as.character(x$Descript), ignore.case = T)
x$Drug[Dr_Index] <- Drugs[i]
}
x$ATM <- NULL
ATM <- c('atm')
for (i in 1:length(ATM)){
atm_Index <- grep(ATM[i],as.character(x$Descript), ignore.case = T)
x$Drug[atm_Index] <- ATM[i]
}
View(x)
x$Drugs <- NULL
Drugs<- c('substance','cocaine','marijuana','narcotics','needle', 'amphetamine','heroin','methadane',
'narcotics','opium','hallucinogenic','opiates','baribituates')
for (i in 1:length(Drugs)){
Dr_Index <- grep(Drugs[i],as.character(x$Descript), ignore.case = T)
x$Drug[Dr_Index] <- Drugs[i]
}
x$ATM <- NULL
ATM <- c('atm')
for (i in 1:length(ATM)){
atm_Index <- grep(ATM[i],as.character(x$Descript), ignore.case = T)
x$ATM[atm_Index] <- ATM[i]
}
x$ATM <- NULL
ATM <- c('atm')
atm_Index <- grep('atm',as.character(x$Descript), ignore.case = T)
x$ATM[atm_Index] <- "ATM"
atm_Index <- grep('atm',as.character(x$Descript), ignore.case = T)
atm_Index <- grep('atm',as.character(x$Descript), ignore.case = T)
atm_Index
x$ATM[atm_Index] <- "ATM"
x$ATM <- NULL
ATM <- c('atm')
atm_Index <- grep('atm',as.character(x$Descript), ignore.case = T)
atm_Index
x$ATM[atm_Index] <- "ATM"
View(x)
x$ATM <- NULL
View(x)
x$ATM <- NULL
atm_Index <- grep('atm',as.character(x$Descript), ignore.case = T)
x$ATM[atm_Index] <- "ATM"
x$ATM[atm_Index] <- "ATM"
names(x)
x$ATM <- NA
atm_Index <- grep('atm',as.character(x$Descript), ignore.case = T)
x$ATM[atm_Index] <- "ATM"
x < -read.csv('TrainWeather3.csv')
x$Drugs <- NA
Drugs<- c('substance','cocaine','marijuana','narcotics','needle', 'amphetamine','heroin','methadane',
'narcotics','opium','hallucinogenic','opiates','baribituates')
for (i in 1:length(Drugs)){
Dr_Index <- grep(Drugs[i],as.character(x$Descript), ignore.case = T)
x$Drug[Dr_Index] <- Drugs[i]
}
x$ATM <- NA
atm_Index <- grep('atm',as.character(x$Descript), ignore.case = T)
x$ATM[atm_Index] <- "ATM"
View(x)
x$Drugs <- NA
Drugs<- c('substance','cocaine','marijuana','narcotics','needle', 'amphetamine','heroin','methadane',
'narcotics','opium','hallucinogenic','opiates','baribituates')
for (i in 1:length(Drugs)){
Dr_Index <- grep(Drugs[i],as.character(x$Descript), ignore.case = T)
x$Drugs[Dr_Index] <- Drugs[i]
}
x$ATM <- NA
atm_Index <- grep('atm',as.character(x$Descript), ignore.case = T)
x$ATM[atm_Index] <- "ATM"
View(x)
x <- read.csv('TrainWeather3.csv')
x$Drugs <- NA
Drugs<- c('substance','cocaine','marijuana','narcotics','needle', 'amphetamine','heroin','methadane',
'narcotics','opium','hallucinogenic','opiates','baribituates')
for (i in 1:length(Drugs)){
Dr_Index <- grep(Drugs[i],as.character(x$Descript), ignore.case = T)
x$Drugs[Dr_Index] <- Drugs[i]
}
x$ATM <- NA
atm_Index <- grep('atm',as.character(x$Descript), ignore.case = T)
x$ATM[atm_Index] <- "ATM"
View(x)
write.csv(x,'TrainWeather4.csv',row.names = FALSE)
446/5680
(415-446)/446
(438-415)/415
415-446)
415-446
x$License <- NA
lic_Index <- grep('suspended',as.character(x$Descript), ignore.case = T)
x$License[lic_Index] <- "Driver's License- Suspended/Revoked"
View(x)
write.csv(x,'TrainWeather4.csv',row.names = FALSE)
x$Traffic_Violation <- NA
x$Traffic_Violation <- NA
tra_Index <- grep('traffic violation',as.character(x$Descript), ignore.case = T)
x$Traffic_Violation[tra_Index] <- "Traffic Violations"
View(x)
write.csv(x,'TrainWeather4.csv',row.names = FALSE)
length(unique(x$License))
length(x$License))
length(x$License)
sum(is.na(x$License))
sum(is.na(x$Traffic_Violation))
?h2o.gbm
library(h2o)
?h2o.gbm
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
load(file = "C:\\Users\\Sapana\\Desktop\\MastersProject\\Crime\\Shiny2\\Multinomial\\Multnom")
ls()
MultNom$coefnames
myData_mul <- read.csv('TrainWeather3.csv') ## Train WEATHER 1 HAS PRECIPITATION STUFF)
## Selecting Userful Predictors
Data <- subset( myData_mul, select =c('X','Y' , 'PdDistrict', 'Broad',
'DayOfWeek','UspsAbb','Year',
'Month','Day','Hour','Minute'))
ix <- c(7:9)
Data[ix] <- lapply(Data[ix],as.factor)
Data <- Data %>% mutate_each_(funs(scale),vars=c("X","Y"))
##Generating Training Dataset
myTrain_mul <- subset(Data, Year != "2015")
##Generating Test Set
Test <- subset(Data, Year== "2015")
myTest_mul <-subset(Test, select = -c(Broad))
str(myTrain_mul)
myTrain_mul$X[1]
shiny::runApp()
shiny::runApp()
ls()
str(myTrain_mul)
?"as.numeric"
shiny::runApp()
MultNom1 <- MultNom
load(file = "C:\\Users\\Sapana\\Desktop\\MastersProject\\Crime\\2o\\myModel\\Multinomial.rda")
str(myTrain_mul)
options(digits = 8)
myTrain_mul$X[1]
options(digits = 20)
myTrain_mul$X[1]
load(file = "C:\\Users\\Sapana\\Desktop\\MastersProject\\Crime\\h2o\\myModel\\Multinomial.rda")
ls()
MultNom$coefnames
shiny::runApp()
shiny::runApp()
ls()
library(nnet)
myData_mul <- read.csv('TrainWeather3.csv') ## Train WEATHER 1 HAS PRECIPITATION STUFF)
Data <- subset( myData_mul, select =c('X','Y' , 'PdDistrict', 'Broad',
'DayOfWeek','UspsAbb','Year',
'Month','Day','Hour','Minute'))
ix <- c(7:9)
Data[ix] <- lapply(Data[ix],as.factor)
str(Data)
myTrain_mul <- subset(Data, Year != "2015")
Test <- subset(Data, Year== "2015")
myTest_mul <-subset(Test, select = -c(Broad))
str(myTrain_mul)
shiny::runApp()
str(myTrain_mul)
Data <- subset( myData_mul, select =c('X','Y' , 'PdDistrict', 'Broad',
'DayOfWeek','UspsAbb','Year',
'Month','Day','Hour','Minute'))
ix <- c(7:9)
Data[ix] <- lapply(Data[ix],as.factor)
ix1 <- c(10:11)
Data[ix1] <- lapply(Data[ix1],as,numeric)
Data[ix1] <- lapply(Data[ix1],as.numeric)
myTrain_mul <- subset(Data, Year != "2015")
Test <- subset(Data, Year== "2015")
myTest_mul <-subset(Test, select = -c(Broad))
str(myTrain_mul)
MultNom <- multinom(Broad ~ X +Y + PdDistrict+ DayOfWeek+ UspsAbb + Month+ Day+ Hour+ Minute + Year
,  data = myTrain_mul)
ls()
rm(Data)
rm(ix)
rm(myData_mul)
h2o.shutdown()
rs(Test)
rm(Test)
MultNom <- multinom(Broad ~ X +Y + PdDistrict+ DayOfWeek+ UspsAbb + Month+ Day+ Hour+ Minute + Year
,  data = myTrain_mul)
load(file = "C:\\Users\\Sapana\\Desktop\\MastersProject\\Crime\\Shiny2\\Multinomial\\Multnom.rda")
MultNom
MultNom -> MultNom1
load(file = "C:\\Users\\Sapana\\Desktop\\MastersProject\\Crime\\h2o\\myModel\\Multinomial.rda")
MultNom
summary(MultNom)
MultNom$value
MultNom$vcoefnames
MultNom$coefnames
MultNom$coefnames -> co
formula(MultNom)
formula(MultNom1)
as.nmatrix
?data.matrix
x <- head(mtcars)
x
data.matrix(x)
DF <- data.frame(a = 1:3, b = letters[10:12],
c = seq(as.Date("2004-01-01"), by = "week", len = 3),
stringsAsFactors = TRUE)
DF
str(DF)
data.matrix(DF[1:2])
str(DF)
data.matrix(DF)
str(DF)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?multinom
shiny::runApp()
shiny::runApp()
load(file = "C:\\Users\\Sapana\\Desktop\\MastersProject\\Crime\\Shiny2\\Multinomial\\mitchs\\Multnom.rda")
shiny::runApp()
shiny::runApp()
shiny::runApp()
options()
shiny::runApp()
shiny::runApp()
deployApp()
library(rsconnect)
deployApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
devtools::install_github('rstudio/shinyapps')
options(shinyapps.locale.cache=FALSE)
shinyapps:::systemLocale()
deployApp('Crime')
deployApp()
install.packages(c("devtools", "ggmap", "plotly"))
devtools::install_github("ropensci/plotly")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
load(file = "C:\\Users\\Sapana\\Desktop\\MastersProject\\Crime\\MultNom.rda")
shiny::runApp()
shiny::runApp()
getwd()
load(file = "C:\\Users\\Sapana\\Desktop\\MastersProject\\Crime\\Multnom.rda")
load(file = "C:\\Users\\Sapana\\Desktop\\MastersProject\\Crime\\Multnom")
load(file = "C:\\Users\\Sapana\\Desktop\\MastersProject\\Crime\\.rda")
load(file = "C:\\Users\\Sapana\\Desktop\\MastersProject\\Crime\\j.rda")
load(file = "C:\\Users\\Sapana\\Desktop\\MastersProject\\Crime\\multnom.rda")
shiny::runApp()
shiny::runApp()
load(file = "C:\\Users\\Sapana\\Desktop\\MastersProject\\Crime\\Multinomial.rda")
formula(MultNom)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
data(MultiNomial)
data(MultiNomial.rda)
data(Multinomial.rda)
data(Multinomial)
ls()
dir()
load('Multinomial.rda')
load("Multinomial.rda")
load("Multinomial.Rda")
attach(Multinomial.Rda)
attach("Multinomial.Rda")
attach("Multinomial.Rda")
?load
attach(Multinomial.Rda)
ls()
attach(Multinomial.Rda)
dir()
ls()
attach(Multinomial.rda)
ls()
data(Multinomial.rda)
data(Multinomial.Rda)
load(Multinomial.Rda)
ls()
load("Multinomial.Rda")
ls()
attach("Multinomial.Rda")
attach("Multinomial.Rda")->c
c
search()
search()
ls()
runGist(875cf74ed8050ef213f03b6b71287c40 )
runGist("875cf74ed8050ef213f03b6b71287c40 ")
list.files()
load(file = "../Crime/Multinomial.Rda")
load(file = "./Crime/Multinomial.Rda")
load(file = "./Multinomial.Rda")
search()
rm('file:Multinomial.Rda')
rm(Multinomial.Rda)
